workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: CodeMagic # Use the name you gave your API key in Codemagic UI
    environment:
      groups:
        - "1"
      vars:
        EXPO_PUBLIC_SUPABASE_URL: https://kpzpsljkpvalemxgzsis.supabase.co
        EXPO_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtwenBzbGprcHZhbGVteGd6c2lzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI3MzA0MjcsImV4cCI6MjA2ODMwNjQyN30.XdA0tKO6FiiY_4eztqkeCTA-kqAmIP0KILL_u79wts4
        NODE_ENV: production
        FCI_WORKSPACE: "RemoveHelp.xcworkspace"
        FCI_SCHEME: "RemoveHelp"
        FCI_APP_ID: 6748972075
        # Add Node.js version for consistency
        NODE_VERSION: 18
        # Disable Expo telemetry to speed up builds
        EXPO_NO_TELEMETRY: 1
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.remove.help
      xcode: latest
      cocoapods: default
      node: 18
    scripts:
      - name: Install npm dependencies
        script: |
          # Clear npm cache to avoid conflicts
          npm cache clean --force
          # Install dependencies with legacy peer deps flag
          npm install --legacy-peer-deps
      - name: Install Expo CLI globally
        script: |
          # Install latest Expo CLI
          npm install -g @expo/cli@latest
          # Verify installation
          expo --version
      - name: Clear caches and prepare for prebuild
        script: |
          # Clear Expo cache
          rm -rf ~/.expo
          # Clear Metro cache
          rm -rf node_modules/.cache
          # Clear npm cache again
          npm cache clean --force
          # Clear any existing native directories
          rm -rf ios android
      - name: Run Expo Prebuild
        script: |
          # Run prebuild with clean flag (removed --verbose as it's not supported)
          npx expo prebuild --clean --platform ios
          # Verify ios directory was created
          if [ -d "ios" ]; then
            echo "✅ iOS directory created successfully"
            ls -la ios/
          else
            echo "❌ iOS directory was not created"
            exit 1
          fi
      - name: Install CocoaPods dependencies
        script: |
          cd ios
          # Update CocoaPods repo
          pod repo update
          # Clean any existing installation
          pod deintegrate || true
          # Install with repo update
          pod install --repo-update
      - name: Verify Xcode project setup
        script: |
          cd ios
          # Check if workspace exists
          if [ -f "$FCI_WORKSPACE" ]; then
            echo "✅ Xcode workspace found: $FCI_WORKSPACE"
          else
            echo "❌ Xcode workspace not found: $FCI_WORKSPACE"
            # List available workspaces and projects
            echo "Available files:"
            ls -la *.xcworkspace *.xcodeproj || echo "No Xcode files found"
            exit 1
          fi
      - name: Set up provisioning profiles
        script: |
          cd ios
          xcode-project use-profiles
      - name: Increment build number
        script: |
          cd ios
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "${FCI_APP_ID}")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
      - name: Build ipa for distribution
        script: |
          cd ios
          # Clean build directory
          rm -rf build/
          
          # Clean Xcode build
          xcodebuild clean -workspace "$FCI_WORKSPACE" -scheme "$FCI_SCHEME"
          
          # Build with proper error handling
          set -e
          xcode-project build-ipa \
            --workspace "$FCI_WORKSPACE" \
            --scheme "$FCI_SCHEME" \
            --config "Release" \
            --disable-automatic-code-signing
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: true